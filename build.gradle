buildscript {
	ext {
		springBootVersion = '1.4.3.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.bmuschko:gradle-docker-plugin:3.0.6'
	}
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

jar {
	baseName = 'demo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.codehaus.groovy:groovy')
	compile('org.springframework:spring-aspects')
//	runtime('com.h2database:h2')
	compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task pullMysql(type: DockerPullImage) {
	repository 'mysql'
	tag 'latest'
}

task inspectImage(type: DockerInspectImage) {
	dependsOn pullMysql
	imageId 'mysql'
}

task createMyAppContainer(type: DockerCreateContainer) {
	dependsOn inspectImage
	targetImageId { inspectImage.getImageId() }
	portBindings = ['3306:3306']
	env = ['MYSQL_ROOT_PASSWORD=secret']
}

task startMyAppContainer(type: DockerStartContainer) {
	dependsOn createMyAppContainer
	targetContainerId { createMyAppContainer.getContainerId() }
	doLast {
		sleep(20000)
	}
}

task stopMyAppContainer(type: DockerStopContainer) {
	targetContainerId { createMyAppContainer.getContainerId() }
}

bootRun.dependsOn startMyAppContainer
bootRun.finalizedBy stopMyAppContainer